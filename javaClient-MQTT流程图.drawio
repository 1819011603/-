<mxfile host="app.diagrams.net" modified="2023-08-20T06:47:28.777Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36" etag="9ba9jMUEt7-B5i69mYZk" version="21.6.8" type="github">
  <diagram name="第 1 页" id="M8wkz3ywA9axf7roCOqa">
    <mxGraphModel dx="2843" dy="822" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="Syk-qBa_AH_hEns3rg3Z-2" target="Syk-qBa_AH_hEns3rg3Z-12">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-2" value="MqttClientBase.&lt;br&gt;initMqttClient初始化MQTT" style="whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
          <mxGeometry x="440" y="305" width="130" height="130" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="Syk-qBa_AH_hEns3rg3Z-3">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="440" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-3" value="MqttHelper.&lt;br&gt;connectMqtt生成MQTT初始化的参数MqttClientConfParams" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="240" y="340" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="Syk-qBa_AH_hEns3rg3Z-6" target="Syk-qBa_AH_hEns3rg3Z-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-6" value="1. LoginServiceImpl中loginInSend和reLoginInSend都会尝试初始化MQTT，&lt;br&gt;2.PingTimer也会每10秒检查逆向和MQTT的状态，如果还有微信机器人未登录的话，根据进程ID和逆向进行绑定登录，使用reverseSendService.sendMessage(null, registry.getId(), loginJson);&lt;br&gt;3.&amp;nbsp;MqttSendServiceImpl.sendMessage时也会初始化MQTT" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry y="282.5" width="210" height="175" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-11" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="Syk-qBa_AH_hEns3rg3Z-8">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="502.5" y="305" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-8" value="在initMqttClient中，&lt;span style=&quot;background-color: initial;&quot;&gt;逆向是比MQTT更早初始化的，初始化后的MQTT会保存在对应的逆向Registry中。&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="420" y="52.5" width="165" height="115" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="Syk-qBa_AH_hEns3rg3Z-12" target="Syk-qBa_AH_hEns3rg3Z-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-12" value="设置回调函数，connectComplete，connectionLost，messageArrived三个回调。订阅的&lt;span style=&quot;background-color: initial;&quot;&gt;主题为taskIssuedTopic + P2P_TOPIC + clientId，clientId为groupId + CLINKID_CONNECTOR + wxId，&lt;/span&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="690" y="305" width="340" height="130" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="Syk-qBa_AH_hEns3rg3Z-14" target="Syk-qBa_AH_hEns3rg3Z-16">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-14" value="connectComplete方法将消息传给MqttClientBase.execute处理，将taskId缓存，防止重复任务。&lt;br&gt;&lt;br&gt;&lt;br&gt;1.&amp;nbsp;不是直接发往逆向的任务类型&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp;上传用户的日志和进群两种， 交给公共线程池处理&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;2. 需要直接发给逆向的，WxSendThreadPoolManager.submitTask(wxId, runnable);为每一个wxId创建一个线程池处理给逆向的任务，因为逆向一次只能发送一条消息，当然这里变成多个线程也无所谓，因为逆向发送时加了锁。&lt;br&gt;3.&amp;nbsp;WxSendTaskWrapper&amp;nbsp; 使用该对象包装了逆向处理的任务，使用ThreadLocal来保证单个wxId直接的逆向任务执行间隔一秒钟。&lt;br&gt;4. 所以加成多线程的话，逆向任务之间间隔一秒钟就无法实现了。&lt;br&gt;5. 要么减短间隔时长，会增加封号风险，加多线程，也会增加封号风险&lt;br&gt;6. 维护一个wxId和执行时间的映射，但也无法解决" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="730" y="550" width="360" height="260" as="geometry" />
        </mxCell>
        <mxCell id="Syk-qBa_AH_hEns3rg3Z-16" value="将任务给cloudFlowHandler处理器，发送过程同FrontFlowHandler。" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="310" y="570" width="270" height="130" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
